syntax = "proto3";

option csharp_namespace = "Utilities.Billing.Api.Protos";

import "Protos/data.proto";

package billing;

service AccountsService 
{
  rpc AddAccountType(AddAccountTypeRequest) returns (AddAccountTypeResponse);

  rpc GetAccountTypes(GetAccountTypesRequest) returns (GetAccountTypesResponse);

  rpc GetAccountType(GetAccountTypeRequest) returns (GetAccountTypeResponse);

  rpc UpdateAccountType(UpdateAccountTypeRequest) returns (UpdateAccountTypeResponse);

  rpc DeleteAccountType(DeleteAccountTypeRequest) returns (DeleteAccountTypeResponse);

  rpc AddAccount(AddAccountRequest) returns (AddAccountResponse);

  rpc GetAccounts(GetAccountsRequest) returns (GetAccountsResponse);

  rpc GetAccount(GetAccountRequest) returns (GetAccountResponse);

  rpc UpdateAccount(UpdateAccountRequest) returns (UpdateAccountResponse);

  rpc DeleteAccount(DeleteAccountRequest) returns (DeleteAccountResponse);

  rpc GetAccountHolder(GetAccountHolderRequest) returns (GetAccountHolderResponse);

  rpc AddAccountHolder(AddAccountHolderRequest) returns (AddAccountHolderResponse);

  rpc UpdateAccountHolder(UpdateAccountHolderRequest) returns (UpdateAccountHolderResponse);

  rpc DeleteAccountHolder(DeleteAccountHolderRequest) returns (DeleteAccountHolderResponse);

  rpc GetAccountHolders(GetAccountHoldersRequest) returns (GetAccountHoldersResponse);
}

/* Account Type */

message GetAccountTypeRequest {
  uint64 id = 1;
}

message GetAccountTypeResponse {
  AccountType accountType = 1;
}
message GetAccountTypesRequest {
  uint32 offset = 1;
  uint32 limit = 2;
}

message GetAccountTypesResponse {
  repeated AccountType accountTypes = 1;
}

message AddAccountTypeRequest {
  string name = 2;
  string token = 3;}

message AddAccountTypeResponse {
  uint64 id = 1;
}

message UpdateAccountTypeRequest {
  uint64 id = 1;
  optional string name = 2;
  optional string token = 3;
}

message UpdateAccountTypeResponse {
}

message DeleteAccountTypeRequest {
  uint64 id = 1;
}

message DeleteAccountTypeResponse {
}

/* Account Holder */

message GetAccountHolderRequest {
  uint64 id = 1;
}

message GetAccountHolderResponse {
  AccountHolder accountHolder =  1;
}

message GetAccountHoldersRequest {
  uint32 offset = 1;
  uint32 limit = 2;
}

message GetAccountHoldersResponse {
  repeated AccountHolder accountHolders = 1;
}

message AddAccountHolderRequest {
  string wallet = 2;
}

message AddAccountHolderResponse {
  uint64 id = 1;
}

message UpdateAccountHolderRequest {
  uint64 id = 1;
  string wallet = 2;
}

message UpdateAccountHolderResponse {
}

message DeleteAccountHolderRequest {
  uint64 id = 1;
}

message DeleteAccountHolderResponse {
}

/* Account */

message GetAccountsRequest {
  uint32 offset = 1;
  uint32 limit = 2;
}

message GetAccountsResponse {
  repeated Account accounts = 1;
}

message GetAccountRequest {
  uint64 id = 1;
}

message GetAccountResponse {
  ExtendedAccount account = 1;
}

message AddAccountRequest {
  uint64 accountHolderId = 2;
  uint64 accountTypeId = 3;
}

message AddAccountResponse {
  uint64 id = 1;
}

message UpdateAccountRequest {
  uint64 id = 1;
  optional uint64 accountHolderId = 2;
  optional uint64 accountTypeId = 3;
}

message UpdateAccountResponse { 
}

message DeleteAccountRequest {
  uint64 id = 1;
}

message DeleteAccountResponse {
}